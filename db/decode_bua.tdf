--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=16 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 15.0 cbx_cycloneii 2015:04:22:18:04:07:SJ cbx_lpm_add_sub 2015:04:22:18:04:07:SJ cbx_lpm_compare 2015:04:22:18:04:07:SJ cbx_lpm_decode 2015:04:22:18:04:08:SJ cbx_mgl 2015:04:22:18:06:50:SJ cbx_stratix 2015:04:22:18:04:08:SJ cbx_stratixii 2015:04:22:18:04:08:SJ  VERSION_END


-- Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_bua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1493w[1..0]	: WIRE;
	w_anode1502w[3..0]	: WIRE;
	w_anode1519w[3..0]	: WIRE;
	w_anode1529w[3..0]	: WIRE;
	w_anode1539w[3..0]	: WIRE;
	w_anode1549w[3..0]	: WIRE;
	w_anode1559w[3..0]	: WIRE;
	w_anode1569w[3..0]	: WIRE;
	w_anode1579w[3..0]	: WIRE;
	w_anode1591w[1..0]	: WIRE;
	w_anode1598w[3..0]	: WIRE;
	w_anode1609w[3..0]	: WIRE;
	w_anode1619w[3..0]	: WIRE;
	w_anode1629w[3..0]	: WIRE;
	w_anode1639w[3..0]	: WIRE;
	w_anode1649w[3..0]	: WIRE;
	w_anode1659w[3..0]	: WIRE;
	w_anode1669w[3..0]	: WIRE;
	w_data1491w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[15..0] = eq_wire[15..0];
	eq_wire[] = ( ( w_anode1669w[3..3], w_anode1659w[3..3], w_anode1649w[3..3], w_anode1639w[3..3], w_anode1629w[3..3], w_anode1619w[3..3], w_anode1609w[3..3], w_anode1598w[3..3]), ( w_anode1579w[3..3], w_anode1569w[3..3], w_anode1559w[3..3], w_anode1549w[3..3], w_anode1539w[3..3], w_anode1529w[3..3], w_anode1519w[3..3], w_anode1502w[3..3]));
	w_anode1493w[] = ( (w_anode1493w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1502w[] = ( (w_anode1502w[2..2] & (! w_data1491w[2..2])), (w_anode1502w[1..1] & (! w_data1491w[1..1])), (w_anode1502w[0..0] & (! w_data1491w[0..0])), w_anode1493w[1..1]);
	w_anode1519w[] = ( (w_anode1519w[2..2] & (! w_data1491w[2..2])), (w_anode1519w[1..1] & (! w_data1491w[1..1])), (w_anode1519w[0..0] & w_data1491w[0..0]), w_anode1493w[1..1]);
	w_anode1529w[] = ( (w_anode1529w[2..2] & (! w_data1491w[2..2])), (w_anode1529w[1..1] & w_data1491w[1..1]), (w_anode1529w[0..0] & (! w_data1491w[0..0])), w_anode1493w[1..1]);
	w_anode1539w[] = ( (w_anode1539w[2..2] & (! w_data1491w[2..2])), (w_anode1539w[1..1] & w_data1491w[1..1]), (w_anode1539w[0..0] & w_data1491w[0..0]), w_anode1493w[1..1]);
	w_anode1549w[] = ( (w_anode1549w[2..2] & w_data1491w[2..2]), (w_anode1549w[1..1] & (! w_data1491w[1..1])), (w_anode1549w[0..0] & (! w_data1491w[0..0])), w_anode1493w[1..1]);
	w_anode1559w[] = ( (w_anode1559w[2..2] & w_data1491w[2..2]), (w_anode1559w[1..1] & (! w_data1491w[1..1])), (w_anode1559w[0..0] & w_data1491w[0..0]), w_anode1493w[1..1]);
	w_anode1569w[] = ( (w_anode1569w[2..2] & w_data1491w[2..2]), (w_anode1569w[1..1] & w_data1491w[1..1]), (w_anode1569w[0..0] & (! w_data1491w[0..0])), w_anode1493w[1..1]);
	w_anode1579w[] = ( (w_anode1579w[2..2] & w_data1491w[2..2]), (w_anode1579w[1..1] & w_data1491w[1..1]), (w_anode1579w[0..0] & w_data1491w[0..0]), w_anode1493w[1..1]);
	w_anode1591w[] = ( (w_anode1591w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1598w[] = ( (w_anode1598w[2..2] & (! w_data1491w[2..2])), (w_anode1598w[1..1] & (! w_data1491w[1..1])), (w_anode1598w[0..0] & (! w_data1491w[0..0])), w_anode1591w[1..1]);
	w_anode1609w[] = ( (w_anode1609w[2..2] & (! w_data1491w[2..2])), (w_anode1609w[1..1] & (! w_data1491w[1..1])), (w_anode1609w[0..0] & w_data1491w[0..0]), w_anode1591w[1..1]);
	w_anode1619w[] = ( (w_anode1619w[2..2] & (! w_data1491w[2..2])), (w_anode1619w[1..1] & w_data1491w[1..1]), (w_anode1619w[0..0] & (! w_data1491w[0..0])), w_anode1591w[1..1]);
	w_anode1629w[] = ( (w_anode1629w[2..2] & (! w_data1491w[2..2])), (w_anode1629w[1..1] & w_data1491w[1..1]), (w_anode1629w[0..0] & w_data1491w[0..0]), w_anode1591w[1..1]);
	w_anode1639w[] = ( (w_anode1639w[2..2] & w_data1491w[2..2]), (w_anode1639w[1..1] & (! w_data1491w[1..1])), (w_anode1639w[0..0] & (! w_data1491w[0..0])), w_anode1591w[1..1]);
	w_anode1649w[] = ( (w_anode1649w[2..2] & w_data1491w[2..2]), (w_anode1649w[1..1] & (! w_data1491w[1..1])), (w_anode1649w[0..0] & w_data1491w[0..0]), w_anode1591w[1..1]);
	w_anode1659w[] = ( (w_anode1659w[2..2] & w_data1491w[2..2]), (w_anode1659w[1..1] & w_data1491w[1..1]), (w_anode1659w[0..0] & (! w_data1491w[0..0])), w_anode1591w[1..1]);
	w_anode1669w[] = ( (w_anode1669w[2..2] & w_data1491w[2..2]), (w_anode1669w[1..1] & w_data1491w[1..1]), (w_anode1669w[0..0] & w_data1491w[0..0]), w_anode1591w[1..1]);
	w_data1491w[2..0] = data_wire[2..0];
END;
--VALID FILE
