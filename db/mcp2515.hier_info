|mcp2515
clk50 => da_buff[0].CLK
clk50 => da_buff[1].CLK
clk50 => da_buff[2].CLK
clk50 => da_buff[3].CLK
clk50 => da_buff[4].CLK
clk50 => da_buff[5].CLK
clk50 => da_buff[6].CLK
clk50 => da_buff[7].CLK
clk50 => sc_buff[0].CLK
clk50 => sc_buff[1].CLK
clk50 => sc_buff[2].CLK
clk50 => sc_buff[3].CLK
clk50 => sc_buff[4].CLK
clk50 => sc_buff[5].CLK
clk50 => sc_buff[6].CLK
clk50 => sc_buff[7].CLK
clk50 => cc_buff[0].CLK
clk50 => cc_buff[1].CLK
clk50 => cc_buff[2].CLK
clk50 => cc_buff[3].CLK
clk50 => cc_buff[4].CLK
clk50 => cc_buff[5].CLK
clk50 => cc_buff[6].CLK
clk50 => cc_buff[7].CLK
clk50 => rec_data[0].CLK
clk50 => mebg~reg0.CLK
clk50 => rec.CLK
clk50 => mscount[0].CLK
clk50 => mscount[1].CLK
clk50 => mscount[2].CLK
clk50 => mscount[3].CLK
clk50 => mscount[4].CLK
clk50 => mscount[5].CLK
clk50 => mscount[6].CLK
clk50 => uscount_c.CLK
clk50 => c_count[0].CLK
clk50 => c_count[1].CLK
clk50 => c_count[2].CLK
clk50 => c_count[3].CLK
clk50 => c_count[4].CLK
clk50 => state[0].CLK
clk50 => state[1].CLK
clk50 => state[2].CLK
clk50 => state[3].CLK
clk50 => tx_flag~reg0.CLK
clk50 => tx_empty~reg0.CLK
clk50 => init.CLK
clk50 => da.CLK
clk50 => sc.CLK
clk50 => cc.CLK
clk50 => cs~reg0.CLK
clk50 => uscount[0].CLK
clk50 => uscount[1].CLK
clk50 => uscount[2].CLK
clk50 => uscount[3].CLK
clk50 => uscount[4].CLK
clk50 => uscount[5].CLK
clk50 => uscount[6].CLK
clk50 => uscount[7].CLK
clk50 => uscount[8].CLK
clk50 => si~reg0.CLK
clk50 => clk_count[0].CLK
clk50 => clk_count[1].CLK
clk50 => clk_count[2].CLK
clk50 => clk_count[3].CLK
clk50 => clk_count[4].CLK
clk50 => clk_count[5].CLK
clk50 => clk_count[6].CLK
clk50 => clk_count[7].CLK
clk50 => clk_count[8].CLK
clk50 => sck~reg0.CLK
cs << cs~reg0.DB_MAX_OUTPUT_PORT_TYPE
si << si~reg0.DB_MAX_OUTPUT_PORT_TYPE
sck << sck~reg0.DB_MAX_OUTPUT_PORT_TYPE
rst_n => rec_data[0].ACLR
rst_n => mebg~reg0.ACLR
rst_n => rec.ACLR
rst_n => mscount[0].ACLR
rst_n => mscount[1].ACLR
rst_n => mscount[2].ACLR
rst_n => mscount[3].ACLR
rst_n => mscount[4].ACLR
rst_n => mscount[5].ACLR
rst_n => mscount[6].ACLR
rst_n => uscount_c.PRESET
rst_n => c_count[0].ACLR
rst_n => c_count[1].ACLR
rst_n => c_count[2].ACLR
rst_n => c_count[3].ACLR
rst_n => c_count[4].ACLR
rst_n => state[0].ACLR
rst_n => state[1].ACLR
rst_n => state[2].ACLR
rst_n => state[3].ACLR
rst_n => tx_flag~reg0.ACLR
rst_n => tx_empty~reg0.PRESET
rst_n => init.ACLR
rst_n => da.ACLR
rst_n => sc.ACLR
rst_n => cc.ACLR
rst_n => cs~reg0.PRESET
rst_n => da_buff[0].ENA
rst_n => cc_buff[7].ENA
rst_n => cc_buff[6].ENA
rst_n => cc_buff[5].ENA
rst_n => cc_buff[4].ENA
rst_n => cc_buff[3].ENA
rst_n => cc_buff[2].ENA
rst_n => cc_buff[1].ENA
rst_n => cc_buff[0].ENA
rst_n => sc_buff[7].ENA
rst_n => sc_buff[6].ENA
rst_n => sc_buff[5].ENA
rst_n => sc_buff[4].ENA
rst_n => sc_buff[3].ENA
rst_n => sc_buff[2].ENA
rst_n => sc_buff[1].ENA
rst_n => sc_buff[0].ENA
rst_n => da_buff[7].ENA
rst_n => da_buff[6].ENA
rst_n => da_buff[5].ENA
rst_n => da_buff[4].ENA
rst_n => da_buff[3].ENA
rst_n => da_buff[2].ENA
rst_n => da_buff[1].ENA
tx_empty << tx_empty~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_flag << tx_flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
so => rec_data.DATAB
mebg << mebg~reg0.DB_MAX_OUTPUT_PORT_TYPE


